#!/bin/bash

echo "๐ ุงุฎุชุจุงุฑ ุฅุตูุงุญุงุช ุตูุญุฉ ุงููุดุงุฑูุน"
echo "================================"
echo ""

echo "โ ูุญุต ุงูุตูุฑ ุงูุงูุชุฑุงุถูุฉ..."
echo "ุนุฏุฏ ูููุงุช SVG ูู project-defaults:"
ls public/project-defaults/*.svg | wc -l

echo ""
echo "โ ูุญุต ูุงุนุฏุฉ ุงูุจูุงูุงุช..."
node -e "
const { PrismaClient } = require('@prisma/client');
const prisma = new PrismaClient();

async function checkProjects() {
  try {
    const projects = await prisma.project.findMany({
      select: {
        id: true,
        titleAr: true,
        image: true,
        category: true
      }
    });
    
    console.log('ุฅุฌูุงูู ุงููุดุงุฑูุน:', projects.length);
    
    let withImages = 0;
    let withDefaults = 0;
    
    projects.forEach(project => {
      if (project.image && project.image.includes('/project-defaults/')) {
        withDefaults++;
      } else if (project.image) {
        withImages++;
      }
    });
    
    console.log('ูุดุงุฑูุน ุจุตูุฑ ุงูุชุฑุงุถูุฉ:', withDefaults);
    console.log('ูุดุงุฑูุน ุจุตูุฑ ูุฎุตุตุฉ:', withImages);
    
    await prisma.\$disconnect();
  } catch (error) {
    console.error('ุฎุทุฃ:', error);
    await prisma.\$disconnect();
  }
}

checkProjects();
"

echo ""
echo "๐ ููุฎุต ุงูุฅุตูุงุญุงุช:"
echo "=================="
echo "1. โ ุฅุฒุงูุฉ ุงูููุชุฑ ุงูููุฑุฑ ูู ProjectsGrid"
echo "2. โ ุชุญุฏูุซ ุฌููุน ุตูุฑ ุงููุดุงุฑูุน"
echo "3. โ ุฅุตูุงุญ ูููู ProjectImage"
echo "4. โ ุฅุถุงูุฉ ุตูุฑ ุงูุชุฑุงุถูุฉ ููู ูุฆุฉ"
echo ""

echo "๐ ุงุฎุชุจุฑ ุงููุชุงุฆุฌ ุนูู:"
echo "http://localhost:3000/ar/projects"
echo ""

echo "โจ ุชู ุฅุตูุงุญ ุฌููุน ุงููุดุงูู!"
