#!/usr/bin/env node

const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function verifyUpdates() {
  console.log('๐ ุงูุชุญูู ูู ุงูุชุญุฏูุซุงุช...\n');

  try {
    // ุชุญูู ูู ูุณุงุฆู ุงูุชูุงุตู ุงูุงุฌุชูุงุนู
    console.log('๐ฑ ูุณุงุฆู ุงูุชูุงุตู ุงูุงุฌุชูุงุนู:');
    const socialMedia = await prisma.socialMedia.findMany();
    socialMedia.forEach(item => {
      console.log(`   ${item.platform}: ${item.url} (${item.isVisible ? 'ูุฑุฆู' : 'ูุฎูู'})`);
    });

    // ุชุญูู ูู ูุนูููุงุช ุงูุงุชุตุงู
    console.log('\n๐ ูุนูููุงุช ุงูุงุชุตุงู:');
    const contactInfo = await prisma.contactInfo.findMany();
    contactInfo.forEach(item => {
      console.log(`   ${item.type} (${item.lang}): ${item.value} - ${item.label} ${item.isPrimary ? '(ุฃุณุงุณู)' : ''}`);
    });

    // ุชุญูู ูู ุงููุนูููุงุช ุงูุดุฎุตูุฉ
    console.log('\n๐ค ุงููุนูููุงุช ุงูุดุฎุตูุฉ:');
    const personalInfo = await prisma.personalInfo.findMany();
    personalInfo.forEach(item => {
      console.log(`   ${item.lang}: ${item.fullName} - ${item.title}`);
      console.log(`   ุงูุณูุฑุฉ ุงูุฐุงุชูุฉ: ${item.resumeUrl}`);
    });

    console.log('\nโ ุฌููุน ุงูุชุญุฏูุซุงุช ุชู ุชุทุจูููุง ุจูุฌุงุญ!');
    console.log('๐ฏ ุฑูู ุงููุงุชุณุงุจ ุงูุฌุฏูุฏ: +905376061625');
    console.log('๐ ูุณุงุฆู ุงูุชูุงุตู ุงูุงุฌุชูุงุนู: 7 ููุตุงุช ููุนูุฉ');
    console.log('๐ ุงูุณูุฑุฉ ุงูุฐุงุชูุฉ ุงุณุชูุจุฏูุช ุจุฑุงุจุท LinkedIn');

  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุงูุชุญูู:', error);
  } finally {
    await prisma.$disconnect();
  }
}

verifyUpdates();
